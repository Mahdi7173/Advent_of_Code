#include <stdio.h>
#include <iostream>
#include <vector>

typedef std::vector<uint8_t> vec_t;

vec_t transform(const size_t iterations, vec_t& input)
{
    vec_t output;

    for (size_t i = 0; i < iterations; ++i)
    {
        vec_t newVec;
        output = newVec;
        output.reserve(input.size() * 2);
        for (size_t n = 0; n < input.size();)
        {
            int rep = n;
            while (rep < input.size() && input[n] == input[rep]) ++rep;
            output.push_back(rep - n); // how many
            output.push_back(input[n]); // of what
            n = rep;
        }
        input = std::move(output);
    }

    return input;
}

int main() {

    vec_t input = { 3,1,1,3,3,2,2,1,1,3 };
    vec_t output = transform(73, input);

    std::cout << output.size() << std::endl;

    char tmp = std::cin.get(); // pause for user input

    return 0;
}